@using IQMedia.Model;
@using IQMedia.Shared.Utility;
@using IQCommon.Model;
@model Dictionary<string, object>
@{
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>iQ media Media Room</title>
    <link href="../../Css/Fonts.css" rel="stylesheet" type="text/css" />
    <link href="../../Css/bootstrap.css" rel="stylesheet" type="text/css" />
    <link href="../../Css/bootstrap-responsive.css" rel="stylesheet" type="text/css" />
    <!-- HTML5 shim, for IE6-8 support of HTML5 elements -->
    <!--[if lt IE 9]>
      <script src="http://html5shim.googlecode.com/svn/trunk/html5.js?v=1.0"></script>
    <![endif]-->
    <script src="~/Scripts/jquery-1.9.1.min.js?v=1.0" type="text/javascript"></script>
    <script src="~/Scripts/jquery.placeholder.js" type="text/javascript"></script>
    <script src="~/Scripts/ConstantScript.js?v=1.32" type="text/javascript"></script>
    <script src="~/Scripts/IQMediaCommon.js?v=2.7" type="text/javascript"></script>
    <script src="~/Scripts/PlayerScript.js?v=1.1" type="text/javascript"></script>
    <link href="~/Css/jquery.mCustomScrollbar.css?v=1.0" rel="stylesheet" type="text/css" />
    <!-- Customizable CSS -->
    <link href="~/css/feed.css?v=3.4" rel="stylesheet" type="text/css" />
    <script src="~/Scripts/jquery.mCustomScrollbar.concat.min.js?v=1.1" type="text/javascript"></script>
    <style type="text/css">
        body
        {
            padding-top: 40px;
            font-family: 'Open Sans';
        }
        .mediatitlediv
        {
            line-height: 25px;
            background-color: #EAEAEA;
            font-weight: bold;
            font-size: 15px;
            border: 1px solid #A0A0A0;
            vertical-align: middle;
            padding-left: 10px;
        }
        .loadingdiv
        {
            top: 71px !important;
        }
    </style>   
</head>
<body id="mainBody">
    @{
        ActiveUser sessionInformation = IQMedia.WebApplication.Utility.ActiveUserMgr.GetActiveUser();
        
    }
    <div class="navbar navbar-inverse navbar-fixed-top" style="background-color: #fff;">
        <!-- from desinger-->
        <div class="container">
        </div>
        <!-- from desinger-->
        <div class="navbar-inner navbar-custome">
            <div class="container">
                <a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse"><span
                    class="icon-bar"></span><span class="icon-bar"></span><span class="icon-bar"></span>
                </a><a class="brand iqmedia-logo" href="#">
                    <img src="~/images/iq-media.png?v=1.3" width="155" height="45" alt="IQ Media" /></a>
                <div class="nav-collapse collapse">
                </div>
                <!--/.nav-collapse -->
            </div>
        </div>
    </div>
    <div class="container container_custom">
        <div class="row-fluid" id="divRowFluid">
            <div style="min-height: 500px; padding: 10px 25px 25px 25px;">
                @if (Model["MCMediaReport"] != null)
                {
                    MCMediaReportModel report = Model["MCMediaReport"] as MCMediaReportModel;

                    try
                    {
                    <div style="padding-top: 10px; text-align: center;">
                        @if (string.IsNullOrEmpty(report.CustomHeader))
                        {
                            <img src="~/Images/EmailNotificationBanner.png" alt="email notification banner" />
                        }
                        else
                        {
                            <img src="@System.Configuration.ConfigurationManager.AppSettings["UrlReportHeader"]@report.MasterClientGuid/@report.CustomHeader" alt="Client Banner" />
                        }
                    </div>
                    <div id="divResultScrollContent" style="padding: 25px; height: 475px; overflow: auto;">
                        <div id="divResults" style="padding-right: 20px;">
                    @{					
                        if (report.HasResults)
                        {
                            foreach (var client in report.GroupTier1Results)
                            {
                                if (client.IsEnabled)
                                {
                                    <div class="mediatitlediv">@client.GroupName</div>
                                }

                                foreach (var groupTier2Result in client.GroupTier2Results)
                                {
                                    foreach (var groupTier3Result in groupTier2Result.GroupTier3Results)
                                    {
                                        foreach (IQArchive_MediaModel item in groupTier3Result.MediaResults)
                                        {
                                            IQ_MediaTypeModel objSubMediaType = ((List<IQ_MediaTypeModel>)Model["MediaTypes"]).First(w => w.SubMediaType == item.SubMediaType.ToString() && w.TypeLevel == 2);
                                            string mediaIconFormat = "../images/MediaIcon/{0}?v=1.3";
                                            string Month = item.MediaDate != null ? item.MediaDate.ToString("MMM", System.Globalization.CultureInfo.InvariantCulture) : string.Empty;
                                            string Day = item.MediaDate != null ? item.MediaDate.Day.ToString() : string.Empty;
                                            string Time = item.MediaDate != null ? item.MediaDate.ToString("hh:mm tt") : string.Empty;
                                            string fTitle = string.Empty;
                                            string sTitle = string.Empty;
                                            string displayText = string.Empty;
                                            string sPub = string.Empty;
                                            string fPub = string.Empty;

                                            string sLocalAudience = string.Empty;
                                            string fLocalAudience = string.Empty;
                                            string sLocalMediaValue = string.Empty;
                                            string fLocalMediaValue = string.Empty;
                                            string sNationalAudience = string.Empty;
                                            string fNationalAudience = string.Empty;
                                            string sNationalMediaValue = string.Empty;
                                            string fNationalMediaValue = string.Empty;

                                            int Billion = 1000000000;
                                            decimal BillionD = 1000000000;
                                            int Million = 1000000;
                                            decimal MillionD = 1000000;

                                            if (!string.IsNullOrWhiteSpace(item.Title))
                                            {
                                                fTitle = item.Title.Trim();

                                                if (fTitle.Length > 65)
                                                {
                                                    sTitle = fTitle.Substring(0, 62) + "...";
                                                }
                                                else
                                                {
                                                    sTitle = fTitle;
                                                }
                                            }

                                            if (!string.IsNullOrWhiteSpace(item.DisplayText))
                                            {
                                                displayText = item.DisplayText.Trim();
                                            }

                                            switch (item.SubMediaType)
                                            {
                                                case CommonFunctions.CategoryType.TV:
                                                    IQArchive_ArchiveClipModel TVModel = item.MediaData as IQArchive_ArchiveClipModel;
                                                    string TVThumbUrl = Convert.ToString(System.Configuration.ConfigurationManager.AppSettings["IQArchieve_TVThumbUrl"]);
                                                    TVThumbUrl += TVModel.ClipID;
                                                    Month = TVModel.LocalDateTime != null ? TVModel.LocalDateTime.ToString("MMM", System.Globalization.CultureInfo.InvariantCulture) : string.Empty;
                                                    Day = TVModel.LocalDateTime != null ? TVModel.LocalDateTime.Day.ToString() : string.Empty;
                                                    Time = TVModel.LocalDateTime != null ? TVModel.LocalDateTime.ToString("hh:mm tt") : string.Empty;

                                                    if (TVModel.Nielsen_Audience.HasValue && TVModel.Nielsen_Audience > 0)
                                                    {
                                                        fLocalAudience = string.Format("{0:N0}", TVModel.Nielsen_Audience);

                                                        if (TVModel.Nielsen_Audience >= Billion)
                                                        {
                                                            sLocalAudience = string.Format("{0:F1} bil", TVModel.Nielsen_Audience / BillionD);
                                                        }
                                                        else if (TVModel.Nielsen_Audience >= Million)
                                                        {
                                                            sLocalAudience = string.Format("{0:F1} mil", TVModel.Nielsen_Audience / MillionD);
                                                        }
                                                        else
                                                        {
                                                            sLocalAudience = fLocalAudience;
                                                        }
                                                    }
                                                    else
                                                    {
                                                        sLocalAudience = "NA";
                                                    }

                                                    if (TVModel.IQAdShareValue.HasValue && TVModel.IQAdShareValue > 0)
                                                    {
                                                        fLocalMediaValue = string.Format("{0:N2}", TVModel.IQAdShareValue);

                                                        if (TVModel.IQAdShareValue >= BillionD)
                                                        {
                                                            sLocalMediaValue = string.Format("{0:F1} bil", TVModel.IQAdShareValue / BillionD);
                                                        }
                                                        else if (TVModel.IQAdShareValue >= MillionD)
                                                        {
                                                            sLocalMediaValue = string.Format("{0:F1} mil", TVModel.IQAdShareValue / MillionD);
                                                        }
                                                        else
                                                        {
                                                            sLocalMediaValue = fLocalMediaValue;
                                                        }
                                                    }
                                                    else
                                                    {
                                                        sLocalMediaValue = "NA";
                                                    }

                                                    if (!string.IsNullOrWhiteSpace(TVModel.Market))
                                                    {
                                                        fPub = TVModel.Market.Trim();

                                                        if (fPub.Length > 23)
                                                        {
                                                            sPub = fPub.Substring(0, 21) + "...";
                                                        }
                                                        else
                                                        {
                                                            sPub = fPub;
                                                        }
                                                    }
                                                    
                    <div id="divMedia_@item.ID" class="media">
                        <div class="MediaDate">
                            <div class="post-date">
                                <span class="month">@Month</span>
                                <div>
                                    <span class="today">@Day</span>
                                </div>
                                <span class="timeWithTimeZone">@Time @TVModel.TimeZone</span>
                            </div>
                        </div>
                        <div class="MediaTypeLogo">
                            <img src="@TVModel.StationLogo" title="@objSubMediaType.DisplayName" />
                        </div>
                        <div class="float-right FeedsVideoSpacer">
                            <div class="FeedsVideo positionRelative float-left">
                                <a class="cursorPointer" href="../ClipPlayer/?ClipID=@TVModel.ClipID" target="_blank">
                                    <img src="@TVThumbUrl" class="maxwidth130" alt="play video" />
                                </a>
                            </div>
                        </div>
                        <div class="MediaRoomContent">
                            <div class="media-heading float-left" title="@Html.Raw(fTitle)">
                                @Html.Raw(sTitle)
                            </div>
                            <div class="subheading float-left margintop1">
                                @item.timeDifference
                            </div>
                            <div class="clear float-left media-body">
                                @Html.Raw(displayText)
                            </div>
                        </div>
                        <div class="clear post-divider"></div>
                        <div class="clear margintop2 marginbottom2">
                            <div class="MediaRoomActionBar">
                                <div class="viewmore" style="min-height:1px">
                                </div>
                                <div class="viewlocation">
                                    @if (!string.IsNullOrWhiteSpace(fPub))
                                    {
                                        <div class="location-tag" title="@fPub">
                                            @sPub
                                        </div>
                                    }
                                    else
                                    { 
                                        <div class="margintop2"></div>
                                    }
                                </div>
                                <div id="divSentimentTV_@item.ID" class="viewsentiment" title="Sentiment">
                                    <div class="sentimentLeftFloat sentiment-tag">
                                        <div class="divSentimentMain sentimentFont">
                                            <div class="divSentimentMain">
                                                <div class="divSentimentNeg">
                                                    <div style='width:@((TVModel.NegativeSentiment * 6) > 25 ? 25 : (TVModel.NegativeSentiment * 6))px;'>
                                                        @TVModel.NegativeSentiment
                                                    </div>
                                                </div>
                                                <div class="divSentimentPos">
                                                    <div style='width:@((TVModel.PositiveSentiment * 6) > 25 ? 25 : (TVModel.PositiveSentiment * 6))px;'>
                                                        @TVModel.PositiveSentiment
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                @if (TVModel.Nielsen_Audience > 0 && TVModel.IQAdShareValue > 0)
                                {
                                    <div class="viewcontentdetail">
                                        <div class="viewshortdetail">
                                            <div class="view" title="Local Audience @fLocalAudience">
                                                @sLocalAudience
                                            </div>
                                        </div>
                                        <div class="viewshortdetail">
                                            <div class="price" title="Local Media Value @fLocalMediaValue">
                                                @sLocalMediaValue
                                                @((TVModel.IQAdShareValue.HasValue ? (!string.IsNullOrWhiteSpace(TVModel.Nielsen_Result) ? TVModel.Nielsen_Result.ToUpper() : string.Empty) : string.Empty))
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
     
                                break;
                                                case CommonFunctions.CategoryType.TW:
                                IQArchive_ArchiveTweetsModel twitterModel = item.MediaData as IQArchive_ArchiveTweetsModel;

                                string sFriends = string.Empty;
                                string fFriends = string.Format("{0:N0}", twitterModel.FreiendsCount);
                                string sFollowers = string.Empty;
                                string fFollowers = string.Format("{0:N0}", twitterModel.FollowersCount);

                                if (twitterModel.FollowersCount >= Billion)
                                {
                                    sFollowers = string.Format("{0:F1} bil", twitterModel.FollowersCount / BillionD);
                                }
                                else if (twitterModel.FollowersCount >= Million)
                                {
                                    sFollowers = string.Format("{0:F1} mil", twitterModel.FollowersCount / MillionD);
                                }
                                else
                                {
                                    sFollowers = fFollowers;
                                }

                                if (twitterModel.FreiendsCount >= Billion)
                                {
                                    sFriends = string.Format("{0:F1} bil", twitterModel.FreiendsCount / BillionD);
                                }
                                else if (twitterModel.FreiendsCount >= Million)
                                {
                                    sFriends = string.Format("{0:F1} mil", twitterModel.FreiendsCount / MillionD);
                                }
                                else
                                {
                                    sFriends = fFriends;
                                }

                                if (!string.IsNullOrWhiteSpace(twitterModel.ActorDisplayname))
                                {
                                    fTitle = twitterModel.ActorDisplayname.Trim();

                                    if (fTitle.Length > 65)
                                    {
                                        sTitle = fTitle.Substring(0, 62) + "...";
                                    }
                                    else
                                    {
                                        sTitle = fTitle;
                                    }
                                }

                                if (!string.IsNullOrWhiteSpace(twitterModel.PreferredUserName))
                                {
                                    fPub = twitterModel.PreferredUserName.Trim();

                                    if (fPub.Length > 23)
                                    {
                                        sPub = fPub.Substring(0, 21) + "...";
                                    }
                                    else
                                    {
                                        sPub = fPub;
                                    }
                                }
                                                    
                    <div id="divMedia_@item.ID" class="media">
                        <div class="MediaDate">
                            <div class="post-date">
                                <span class="month">@Month</span>
                                <div>
                                    <span class="today">@Day</span>
                                </div>
                                <span class="timeWithTimeZone">@Time @(sessionInformation.IsLogIn ? sessionInformation.TimeZone : string.Empty)</span>
                            </div>
                        </div>
                        <div class="MediaTypeLogo">
                            <img src="@objSubMediaType.MediaIconPath" title="@objSubMediaType.DisplayName" />
                        </div>
                        <div class="MediaRoomContent borderBoxSizing">
                            <div class="media-heading float-left" title="@Html.Raw(fTitle)">
                                <a href="@twitterModel.ActorLink/status/@twitterModel.TweetID" target="_blank">
                                    @Html.Raw(sTitle)
                                </a>
                            </div>
                            <div class="subheading float-left margintop1">
                                @item.timeDifference
                            </div>
                            <div class="clear float-left media-body">
                                @Html.Raw(displayText)
                            </div>
                        </div>
                        <div class="clear post-divider"></div>
                        <div class="clear margintop2 marginbottom2">
                            <div class="MediaRoomActionBar">
                                <div class="viewmore" style="min-height:1px">
                                </div>
                                <div class="viewlocation">
                                    @if (!string.IsNullOrWhiteSpace(fPub))
                                    {
                                        <div class="location-tag" title="@fPub">
                                            @sPub
                                        </div>
                                    }
                                    else
                                    { 
                                        <div class="margintop2"></div>
                                    }
                                </div>
                                <div id="divSentimentTW_@item.ID" class="viewsentiment" title="Sentiment">
                                    <div class="sentimentLeftFloat sentiment-tag">
                                        <div class="divSentimentMain sentimentFont">
                                            <div class="divSentimentMain">
                                                <div class="divSentimentNeg">
                                                    <div style='width:@((twitterModel.NegativeSentiment * 6) > 25 ? 25 : (twitterModel.NegativeSentiment * 6))px;'>
                                                        @twitterModel.NegativeSentiment
                                                    </div>
                                                </div>
                                                <div class="divSentimentPos">
                                                    <div style='width:@((twitterModel.PositiveSentiment * 6) > 25 ? 25 : (twitterModel.PositiveSentiment * 6))px;'>
                                                        @twitterModel.PositiveSentiment
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="viewcontentdetail">
                                    <div class="viewshortdetail">
                                        <div class="klout" title="Klout Score">
                                            @(string.Format("{0:n0}", twitterModel.KloutScore))
                                        </div>
                                    </div>
                                    <div class="viewshortdetail">
                                        <div class="followers" title="Followers @fFollowers">
                                            @sFollowers
                                        </div>
                                    </div>
                                    <div class="viewshortdetail">
                                        <div class="following" title="Following @fFriends">
                                            @sFriends
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                                       break;
                                                case CommonFunctions.CategoryType.NM:
                                                case CommonFunctions.CategoryType.LN:
                                       IQArchive_ArchiveNMModel newsMediaModel = item.MediaData as IQArchive_ArchiveNMModel;

                                       if (newsMediaModel.Compete_Audience.HasValue && newsMediaModel.Compete_Audience > 0)
                                       {
                                           fLocalAudience = string.Format("{0:N0}", newsMediaModel.Compete_Audience);

                                           if (newsMediaModel.Compete_Audience >= Billion)
                                           {
                                               sLocalAudience = string.Format("{0:F1} bil", newsMediaModel.Compete_Audience / BillionD);
                                           }
                                           else if (newsMediaModel.Compete_Audience >= Million)
                                           {
                                               sLocalAudience = string.Format("{0:F1} mil", newsMediaModel.Compete_Audience / MillionD);
                                           }
                                           else
                                           {
                                               sLocalAudience = fLocalAudience;
                                           }
                                       }
                                       else
                                       {
                                           sLocalAudience = "NA";
                                       }

                                       if (newsMediaModel.IQAdShareValue.HasValue && newsMediaModel.IQAdShareValue > 0)
                                       {
                                           fLocalMediaValue = string.Format("{0:N2}", newsMediaModel.IQAdShareValue);

                                           if (newsMediaModel.IQAdShareValue >= BillionD)
                                           {
                                               sLocalMediaValue = string.Format("{0:F1} bil", newsMediaModel.IQAdShareValue / BillionD);
                                           }
                                           else if (newsMediaModel.IQAdShareValue >= MillionD)
                                           {
                                               sLocalMediaValue = string.Format("{0:F1} mil", newsMediaModel.IQAdShareValue / MillionD);
                                           }
                                           else
                                           {
                                               sLocalMediaValue = fLocalMediaValue;
                                           }
                                       }
                                       else
                                       {
                                           sLocalMediaValue = "NA";
                                       }

                                       if (!string.IsNullOrWhiteSpace(newsMediaModel.Publication))
                                       {
                                           fPub = newsMediaModel.Publication.Trim();

                                           if (fPub.Length > 23)
                                           {
                                               sPub = fPub.Substring(0, 21) + "...";
                                           }
                                           else
                                           {
                                               sPub = fPub;
                                           }
                                       }
                                                    
                    <div id="divMedia_@item.ID" class="media">
                        <div class="MediaDate">
                            <div class="post-date">
                                <span class="month">@Month</span>
                                <div>
                                    <span class="today">@Day</span>
                                </div>
                                <span class="timeWithTimeZone">@Time @(sessionInformation.IsLogIn ? sessionInformation.TimeZone : string.Empty)</span>
                            </div>
                        </div>
                        <div class="MediaTypeLogo">
                            <img src="@objSubMediaType.MediaIconPath" title="@objSubMediaType.DisplayName" />
                        </div>
                        <div class="MediaRoomContent">
                            <div class="media-heading float-left" title="@Html.Raw(fTitle)">
                                @if (newsMediaModel.IQLicense == 3)
                                {
                                    <img src="~/images/MediaIcon/LexisNexis_Small.png" title="LexisNexis(R)" alt="LexisNexis(R)" class="lexisNexisImg" />
                                }
                                <a href="@(newsMediaModel.IQLicense > 0 ? Url.Action("Index", "Article", new { au = CommonFunctions.EncryptLicenseStringAES(sessionInformation.CustomerKey + "¶IQAgent Report¶" + newsMediaModel.Url + "&u1=cliq40&u2=" + sessionInformation.ClientID + "¶" + newsMediaModel.IQLicense) }) : newsMediaModel.Url)" target="_blank">
                                    @Html.Raw(sTitle)
                                </a>
                            </div>
                            <div class="subheading float-left margintop1">
                                @item.timeDifference
                            </div>
                            <div class="clear float-left media-body">
                                @Html.Raw(displayText)
                            </div>
                        </div>
                        <div class="clear post-divider"></div>
                        <div class="clear margintop2 marginbottom2">
                            <div class="MediaRoomActionBar">
                                <div class="viewmore" style="min-height:1px">
                                </div>
                                <div class="viewlocation">
                                    @if (!string.IsNullOrWhiteSpace(fPub))
                                    {
                                        <div class="location-tag" title="@fPub">
                                            @sPub
                                        </div>
                                    }
                                    else
                                    { 
                                        <div class="margintop2"></div>
                                    }
                                </div>
                                <div id="divSentimentNM_@item.ID" class="viewsentiment" title="Sentiment">
                                    <div class="sentimentLeftFloat sentiment-tag">
                                        <div class="divSentimentMain sentimentFont">
                                            <div class="divSentimentMain">
                                                <div class="divSentimentNeg">
                                                    <div style='width:@((newsMediaModel.NegativeSentiment * 6) > 25 ? 25 : (newsMediaModel.NegativeSentiment * 6))px;'>
                                                        @newsMediaModel.NegativeSentiment
                                                    </div>
                                                </div>
                                                <div class="divSentimentPos">
                                                    <div style='width:@((newsMediaModel.PositiveSentiment * 6) > 25 ? 25 : (newsMediaModel.PositiveSentiment * 6))px;'>
                                                        @newsMediaModel.PositiveSentiment
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="viewcontentdetail">
                                    @if (Decimal.Compare(Convert.ToDecimal(newsMediaModel.IQAdShareValue), -1M) != 0 && newsMediaModel.Compete_Audience != -1)
                                    {
                                        <div class="viewshortdetail">
                                            <div class="view" title="Local Audience @fLocalAudience">
                                                @sLocalAudience
                                                @if (!string.IsNullOrWhiteSpace(newsMediaModel.Compete_Result) && newsMediaModel.Compete_Result.ToUpper() == "A")
                                                {
                                                    <img title="Powered by Compete" class="competeIcon" src="~/Images/compete.png" alt="Compete Image" />
                                                }
                                            </div>
                                        </div>
                                        <div class="viewshortdetail">
                                            <div class="price" title="Local Media Value @fLocalMediaValue">
                                                @sLocalMediaValue
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>

                                    break;
                                                case CommonFunctions.CategoryType.SocialMedia:
                                    IQArchive_ArchiveSMModel socialMediaModel = item.MediaData as IQArchive_ArchiveSMModel;

                                    if (!string.IsNullOrWhiteSpace(socialMediaModel.Publication))
                                    {
                                        fPub = socialMediaModel.Publication.Trim();

                                        if (fPub.Length > 23)
                                        {
                                            sPub = fPub.Substring(0, 21) + "...";
                                        }
                                        else
                                        {
                                            sPub = fPub;
                                        }
                                    }
                                                   
                    <div id="divMedia_@item.ID" class="media">
                        <div class="MediaDate">
                            <div class="post-date">
                                <span class="month">@Month</span>
                                <div>
                                    <span class="today">@Day</span>
                                </div>
                                <span class="timeWithTimeZone">@Time @(sessionInformation.IsLogIn ? sessionInformation.TimeZone : string.Empty)</span>
                            </div>
                        </div>
                        <div class="MediaTypeLogo">
                            <img src="@objSubMediaType.MediaIconPath" title="@objSubMediaType.DisplayName" />
                        </div>
                        <div class="MediaRoomContent">
                            <div class="media-heading float-left" title="@Html.Raw(fTitle)">
                                <a href="@socialMediaModel.Url" target="_blank">@Html.Raw(sTitle)</a>
                            </div>
                            <div class="subheading float-left margintop1">
                                @item.timeDifference
                            </div>
                            <div class="clear float-left media-body">
                                @Html.Raw(displayText)
                            </div>
                        </div>
                        <div class="clear post-divider"></div>
                        <div class="clear margintop2 marginbottom2">
                            <div class="MediaRoomActionBar">
                                <div class="viewmore" style="min-height:1px">
                                </div>
                                <div class="viewlocation">
                                    @if (!string.IsNullOrWhiteSpace(fPub))
                                    {
                                        <div class="location-tag" title="@fPub">
                                            @sPub
                                        </div>
                                    }
                                    else
                                    { 
                                        <div class="margintop2"></div>
                                    }
                                </div>
                                <div id="divSentimentTV_@item.ID" class="viewsentiment" title="Sentiment">
                                    <div class="sentimentLeftFloat sentiment-tag">
                                        <div class="divSentimentMain sentimentFont"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                                                   break;
                                                case CommonFunctions.CategoryType.Forum:
                                                   IQArchive_ArchiveSMModel forumModel = item.MediaData as IQArchive_ArchiveSMModel;

                                                   if (!string.IsNullOrWhiteSpace(forumModel.Publication))
                                                   {
                                                       fPub = forumModel.Publication.Trim();

                                                       if (fPub.Length > 23)
                                                       {
                                                           sPub = fPub.Substring(0, 21) + "...";
                                                       }
                                                       else
                                                       {
                                                           sPub = fPub;
                                                       }
                                                   }
                                                   
                    <div id="divMedia_@item.ID" class="media">
                        <div class="MediaDate">
                            <div class="post-date">
                                <span class="month">@Month</span>
                                <div>
                                    <span class="today">@Day</span>
                                </div>
                                <span class="timeWithTimeZone">@Time @(sessionInformation.IsLogIn ? sessionInformation.TimeZone : string.Empty)</span>
                            </div>
                        </div>
                        <div class="MediaTypeLogo">
                            <img src="@objSubMediaType.MediaIconPath" title="@objSubMediaType.DisplayName" />
                        </div>
                        <div class="MediaRoomContent">
                            <div class="media-heading float-left" title="@Html.Raw(fTitle)">
                                <a href="@forumModel.Url" target="_blank">@Html.Raw(sTitle)</a>
                            </div>
                            <div class="subheading float-left margintop1">
                                @item.timeDifference
                            </div>
                            <div class="clear float-left media-body">
                                @Html.Raw(displayText)
                            </div>
                        </div>
                        <div class="clear post-divider"></div>
                        <div class="clear margintop2 marginbottom2">
                            <div class="MediaRoomActionBar">
                                <div class="viewmore" style="min-height:1px">
                                </div>
                                <div class="viewlocation">
                                    @if (!string.IsNullOrWhiteSpace(fPub))
                                    {
                                        <div class="location-tag" title="@fPub">
                                            @sPub
                                        </div>
                                    }
                                    else
                                    { 
                                        <div class="margintop2"></div>
                                    }
                                </div>
                                <div id="divSentimentTV_@item.ID" class="viewsentiment" title="Sentiment">
                                    <div class="sentimentLeftFloat sentiment-tag">
                                        <div class="divSentimentMain sentimentFont">
                                            <div class="divSentimentMain">
                                                <div class="divSentimentNeg">
                                                    <div style='width:@((forumModel.NegativeSentiment * 6) > 25 ? 25 : (forumModel.NegativeSentiment * 6))px;'>
                                                        @forumModel.NegativeSentiment
                                                    </div>
                                                </div>
                                                <div class="divSentimentPos">
                                                    <div style='width:@((forumModel.PositiveSentiment * 6) > 25 ? 25 : (forumModel.PositiveSentiment * 6))px;'>
                                                        @forumModel.PositiveSentiment
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                                                   break;
                                                case CommonFunctions.CategoryType.Blog:
                                                   IQArchive_ArchiveSMModel blogModel = item.MediaData as IQArchive_ArchiveSMModel;

                                                   if (blogModel.Compete_Audience.HasValue && blogModel.Compete_Audience > 0)
                                                   {
                                                       fLocalAudience = string.Format("{0:N0}", blogModel.Compete_Audience);

                                                       if (blogModel.Compete_Audience >= Billion)
                                                       {
                                                           sLocalAudience = string.Format("{0:F1} bil", blogModel.Compete_Audience / BillionD);
                                                       }
                                                       else if (blogModel.Compete_Audience >= Million)
                                                       {
                                                           sLocalAudience = string.Format("{0:F1} mil", blogModel.Compete_Audience / MillionD);
                                                       }
                                                       else
                                                       {
                                                           sLocalAudience = fLocalAudience;
                                                       }
                                                   }
                                                   else
                                                   {
                                                       sLocalAudience = "NA";
                                                   }

                                                   if (blogModel.IQAdShareValue.HasValue && blogModel.IQAdShareValue > 0)
                                                   {
                                                       fLocalMediaValue = string.Format("{0:N2}", blogModel.IQAdShareValue);

                                                       if (blogModel.IQAdShareValue >= BillionD)
                                                       {
                                                           sLocalMediaValue = string.Format("{0:F1} bil", blogModel.IQAdShareValue / BillionD);
                                                       }
                                                       else if (blogModel.IQAdShareValue >= MillionD)
                                                       {
                                                           sLocalMediaValue = string.Format("{0:F1} mil", blogModel.IQAdShareValue / MillionD);
                                                       }
                                                       else
                                                       {
                                                           sLocalMediaValue = fLocalMediaValue;
                                                       }
                                                   }
                                                   else
                                                   {
                                                       sLocalMediaValue = "NA";
                                                   }

                                                   if (!string.IsNullOrWhiteSpace(blogModel.Publication))
                                                   {
                                                       fPub = blogModel.Publication.Trim();

                                                       if (fPub.Length > 23)
                                                       {
                                                           sPub = fPub.Substring(0, 21) + "...";
                                                       }
                                                       else
                                                       {
                                                           sPub = fPub;
                                                       }
                                                   }
                                                   
                    <div id="divMedia_@item.ID" class="media">
                        <div class="MediaDate">
                            <div class="post-date">
                                <span class="month">@Month</span>
                                <div>
                                    <span class="today">@Day</span>
                                </div>
                                <span class="timeWithTimeZone">@Time @(sessionInformation.IsLogIn ? sessionInformation.TimeZone : string.Empty)</span>
                            </div>
                        </div>
                        <div class="MediaTypeLogo">
                            <img src="@objSubMediaType.MediaIconPath" title="@objSubMediaType.DisplayName" />
                        </div>
                        <div class="MediaRoomContent">
                            <div class="media-heading float-left" title="@Html.Raw(fTitle)">
                                <a href="@blogModel.Url" target="_blank">@Html.Raw(sTitle)</a>
                            </div>
                            <div class="subheading float-left margintop1">
                                @item.timeDifference
                            </div>
                            <div class="clear float-left media-body">
                                @Html.Raw(displayText)
                            </div>
                        </div>
                        <div class="clear post-divider"></div>
                        <div class="clear margintop2 marginbottom2">
                            <div class="MediaRoomActionBar">
                                <div class="viewmore" style="min-height:1px">
                                </div>
                                <div class="viewlocation">
                                    @if (!string.IsNullOrWhiteSpace(fPub))
                                    {
                                        <div class="location-tag" title="@fPub">
                                            @sPub
                                        </div>
                                    }
                                    else
                                    { 
                                        <div class="margintop2"></div>
                                    }
                                </div>
                                <div id="divSentimentTV_@item.ID" class="viewsentiment" title="Sentiment">
                                    <div class="sentimentLeftFloat sentiment-tag">
                                        <div class="divSentimentMain sentimentFont">
                                            <div class="divSentimentMain">
                                                <div class="divSentimentNeg">
                                                    <div style='width:@((blogModel.NegativeSentiment * 6) > 25 ? 25 : (blogModel.NegativeSentiment * 6))px;'>
                                                        @blogModel.NegativeSentiment
                                                    </div>
                                                </div>
                                                <div class="divSentimentPos">
                                                    <div style='width:@((blogModel.PositiveSentiment * 6) > 25 ? 25 : (blogModel.PositiveSentiment * 6))px;'>
                                                        @blogModel.PositiveSentiment
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="viewcontentdetail">
                                    @if (Decimal.Compare(Convert.ToDecimal(blogModel.IQAdShareValue), -1M) != 0 && blogModel.Compete_Audience != -1)
                                    {
                                        <div class="viewshortdetail">
                                            <div class="view" title="Local Audience @fLocalAudience">
                                                @sLocalAudience
                                                @if (!string.IsNullOrWhiteSpace(blogModel.Compete_Result) && blogModel.Compete_Result.ToUpper() == "A")
                                                {
                                                    <img title="Powered by Compete" class="competeIcon" src="~/Images/compete.png" alt="Compete Image" />
                                                }
                                            </div>
                                        </div>
                                        <div class="viewshortdetail">
                                            <div class="price" title="Local Media Value @fLocalMediaValue">
                                                @sLocalMediaValue
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>

                                    break;
                                                case CommonFunctions.CategoryType.FB:
                                                case CommonFunctions.CategoryType.IG:
                                    IQArchive_ArchiveSMModel fbModel = item.MediaData as IQArchive_ArchiveSMModel;
                                    string contentClass = item.SubMediaType == CommonFunctions.CategoryType.IG ? "MediaRoomContentVideo" : "MediaRoomContent";

                                    string fLikes = string.Format("{0:N0}", fbModel.ArticleStats.Likes);
                                    string sLikes = string.Empty;

                                    if (fbModel.ArticleStats.Likes >= Billion)
                                    {
                                        sLikes = string.Format("{0:F1} bil", fbModel.ArticleStats.Likes / BillionD);
                                    }
                                    else if (fbModel.ArticleStats.Likes >= Million)
                                    {
                                        sLikes = string.Format("{0:F1} mil", fbModel.ArticleStats.Likes / MillionD);
                                    }
                                    else
                                    {
                                        sLikes = fLikes;
                                    }

                                    string fComments = string.Format("{0:N0}", fbModel.ArticleStats.Comments);
                                    string sComments = string.Empty;

                                    if (fbModel.ArticleStats.Comments >= Billion)
                                    {
                                        sComments = string.Format("{0:F1} bil", fbModel.ArticleStats.Comments / BillionD);
                                    }
                                    else if (fbModel.ArticleStats.Comments >= Million)
                                    {
                                        sComments = string.Format("{0:F1} mil", fbModel.ArticleStats.Comments / MillionD);
                                    }
                                    else
                                    {
                                        sComments = fComments;
                                    }

                                    string fShares = string.Format("{0:N0}", fbModel.ArticleStats.Shares);
                                    string sShares = string.Empty;

                                    if (fbModel.ArticleStats.Shares >= Billion)
                                    {
                                        sShares = string.Format("{0:F1} bil", fbModel.ArticleStats.Shares / BillionD);
                                    }
                                    else if (fbModel.ArticleStats.Shares >= Million)
                                    {
                                        sShares = string.Format("{0:F1} mil", fbModel.ArticleStats.Shares / MillionD);
                                    }
                                    else
                                    {
                                        sShares = fComments;
                                    }

                                    if (!string.IsNullOrWhiteSpace(fbModel.Publication))
                                    {
                                        fPub = fbModel.Publication.Trim();

                                        if (fPub.Length > 23)
                                        {
                                            sPub = fPub.Substring(0, 21) + "...";
                                        }
                                        else
                                        {
                                            sPub = fPub;
                                        }
                                    }
                                                   
                    <div id="divMedia_@item.ID" class="media">
                        <div class="MediaDate">
                            <div class="post-date">
                                <span class="month">@Month</span>
                                <div>
                                    <span class="today">@Day</span>
                                </div>
                                <span class="timeWithTimeZone">@Time @sessionInformation.TimeZone</span>
                            </div>
                        </div>
                        <div class="MediaTypeLogo">
                            <img src="@objSubMediaType.MediaIconPath" title="@objSubMediaType.DisplayName" />
                        </div>
                        @if (item.SubMediaType == CommonFunctions.CategoryType.IG)
                        {
                            <div class="float-right FeedsVideoSpacer">
                                <div class="FeedsVideo positionRelative float-left">
                                    <img class="instagramIMG" src="@fbModel.ThumbUrl" />
                                </div>
                            </div>
                        }
                        <div class="@contentClass">
                            <div class="media-heading float-left" title="@Html.Raw(fTitle)">
                                <a href="@fbModel.Url" target="_blank">@Html.Raw(sTitle)</a>
                            </div>
                            <div class="subheading float-left margintop1">
                                @item.timeDifference
                            </div>
                            <div class="clear float-left media-body">
                                @Html.Raw(displayText)
                            </div>
                        </div>
                        <div class="clear post-divider"></div>
                        <div class="clear margintop2 marginbottom2">
                            <div class="MediaRoomActionBar">
                                <div class="viewmore" style="min-height:1px">
                                </div>
                                <div class="viewlocation">
                                    @if (!string.IsNullOrWhiteSpace(fPub))
                                    {
                                        <div class="location-tag" title="@fPub">
                                            @sPub
                                        </div>
                                    }
                                    else
                                    { 
                                        <div class="margintop2"></div>
                                    }
                                </div>
                                <div id="divSentimentTV_@item.ID" class="viewsentiment" title="Sentiment">
                                    <div class="sentimentLeftFloat sentiment-tag">
                                        <div class="divSentimentMain sentimentFont">
                                            <div class="divSentimentMain">
                                                <div class="divSentimentNeg">
                                                    <div style='width:@((fbModel.NegativeSentiment * 6) > 25 ? 25 : (fbModel.NegativeSentiment * 6))px;'>
                                                        @fbModel.NegativeSentiment
                                                    </div>
                                                </div>
                                                <div class="divSentimentPos">
                                                    <div style='width:@((fbModel.PositiveSentiment * 6) > 25 ? 25 : (fbModel.PositiveSentiment * 6))px;'>
                                                        @fbModel.PositiveSentiment
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="viewcontentdetail">
                                    @if (fbModel.ArticleStats != null)
                                    {
                                        <div class="viewshortdetail">
                                            <div class="likes" title="Likes @fLikes">
                                                @sLikes
                                            </div>
                                        </div>
                                        <div class="viewshortdetail">
                                            <div class="comments" title="Comments @fComments">
                                                @sComments
                                            </div>
                                        </div>
                                        if (item.SubMediaType == CommonFunctions.CategoryType.FB)
                                        { 
                                            <div class="viewshortdetail">
                                                <div class="shares" title="Shares @fShares">
                                                    @sShares
                                                </div>
                                            </div>
                                        }
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
     
                                    break;
                                                case CommonFunctions.CategoryType.Radio:
                                    IQArchive_ArchiveTVEyesModel tvEyesModel = item.MediaData as IQArchive_ArchiveTVEyesModel;
                                    Month = tvEyesModel.LocalDateTime != null ? tvEyesModel.LocalDateTime.ToString("MMM", System.Globalization.CultureInfo.InvariantCulture) : string.Empty;
                                    Day = tvEyesModel.LocalDateTime != null ? tvEyesModel.LocalDateTime.Day.ToString() : string.Empty;
                                    Time = tvEyesModel.LocalDateTime != null ? tvEyesModel.LocalDateTime.ToString("hh:mm tt") : string.Empty;

                                    if (!string.IsNullOrWhiteSpace(tvEyesModel.Market))
                                    {
                                        fPub = tvEyesModel.Market.Trim();

                                        if (fPub.Length > 23)
                                        {
                                            sPub = fPub.Substring(0, 21) + "...";
                                        }
                                        else
                                        {
                                            sPub = fPub;
                                        }
                                    }
                                                    
                    <div id="divMedia_@item.ID" class="media">
                        <div class="MediaDate">
                            <div class="post-date">
                                <span class="month">@Month</span>
                                <div>
                                    <span class="today">@Day</span>
                                </div>
                                <span class="timeWithTimeZone">@Time @tvEyesModel.TimeZone</span>
                            </div>
                        </div>
                        <div class="MediaTypeLogo">
                            <img src="@objSubMediaType.MediaIconPath" title="@objSubMediaType.DisplayName" />
                        </div>
                        <div class="float-right tvFeedsThumbParent">
                            <div class="float-left video-thumb-width tvFeedsThumb marginRight10">
                                <div class="positionRelative">
                                    <a class="cursorPointer" target="_blank" href="@(System.Configuration.ConfigurationManager.AppSettings["RadioClipPlayerURL"] + Url.Encode(CommonFunctions.GenerateRandomString() + CommonFunctions.EncryptStringAES(item.ID.ToString(), CommonFunctions.AesKeyLibRadioPlayer, CommonFunctions.AesIVLibRadioPlayer)))">
                                        <img src="~/images/video.png" class="maxwidth130" alt="play video" />
                                    </a>
                                </div>
                            </div>
                        </div>
                        <div class="MediaRoomContent">
                            <div class="media-heading float-left" title="@Html.Raw(fTitle)">
                                @Html.Raw(sTitle)
                            </div>
                            <div class="subheading float-left margintop1">
                                @item.timeDifference
                            </div>
                            <div class="clear float-left media-body tmStationDiv">
                                <span style="color:#73897F">@tvEyesModel.StationID</span>
                                @if (!string.IsNullOrEmpty(displayText))
                                {
                                    <span> - @Html.Raw(displayText)</span>
                                }
                            </div>
                        </div>
                        <div class="clear post-divider"></div>
                        <div class="clear margintop2 marginbottom2">
                            <div class="MediaRoomActionBar">
                                <div class="viewmore" style="min-height:1px">
                                </div>
                                <div class="viewlocation">
                                    @if (!string.IsNullOrWhiteSpace(fPub))
                                    {
                                        <div class="location-tag" title="@fPub">
                                            @sPub
                                        </div>
                                    }
                                    else
                                    { 
                                        <div class="margintop2"></div>
                                    }
                                </div>
                                <div id="divSentimentTM_@item.ID" class="viewsentiment" title="Sentiment">
                                    <div class="sentimentLeftFloat sentiment-tag">
                                        <div class="divSentimentMain sentimentFont">
                                            <div class="divSentimentMain">
                                                <div class="divSentimentNeg">
                                                    <div style='width:@((tvEyesModel.NegativeSentiment * 6) > 25 ? 25 : (tvEyesModel.NegativeSentiment * 6))px;'>
                                                        @tvEyesModel.NegativeSentiment
                                                    </div>
                                                </div>
                                                <div class="divSentimentPos">
                                                    <div style='width:@((tvEyesModel.PositiveSentiment * 6) > 25 ? 25 : (tvEyesModel.PositiveSentiment * 6))px;'>
                                                        @tvEyesModel.PositiveSentiment
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="viewcontentdetail">
                    @if (!string.IsNullOrEmpty(tvEyesModel.DMARank))
                    {
                        <div class="marketrank pull-left" title="Market Rank @tvEyesModel.DMARank">
                            <span>@tvEyesModel.DMARank</span>
                        </div>
                    }
                    else
                    {
                        <div align="center" class="margintop2"></div>
                    }
                                </div>
                            </div>
                        </div>
                    </div>
     
                    break;
                                                case CommonFunctions.CategoryType.PM:
                    string PMBasePath = Convert.ToString(System.Configuration.ConfigurationManager.AppSettings["IQArchieve_PMBaseUrl"]);
                    IQArchive_ArchiveBLPMModel PMModel = item.MediaData as IQArchive_ArchiveBLPMModel;

                    string fCirculation = string.Format("{0:N0}", PMModel.Circulation);
                    string sCirculation = string.Empty;

                    if (PMModel.Circulation >= Billion)
                    {
                        sCirculation = string.Format("{0:F1} bil", PMModel.Circulation / BillionD);
                    }
                    else if (PMModel.Circulation >= Million)
                    {
                        sCirculation = string.Format("{0:F1} mil", PMModel.Circulation / MillionD);
                    }
                    else
                    {
                        sCirculation = fCirculation;
                    }

                    if (!string.IsNullOrWhiteSpace(PMModel.Pub_Name))
                    {
                        fPub = PMModel.Pub_Name.Trim();

                        if (fPub.Length > 23)
                        {
                            sPub = fPub.Substring(0, 21) + "...";
                        }
                        else
                        {
                            sPub = fPub;
                        }
                    }
                                                    
                    <div id="divMedia_@item.ID" class="media">
                        <div class="MediaDate">
                            <div class="post-date">
                                <span class="month">@Month</span>
                                <div>
                                    <span class="today">@Day</span>
                                </div>
                                <span class="timeWithTimeZone">@Time @(sessionInformation.IsLogIn ? sessionInformation.TimeZone : string.Empty)</span>
                            </div>
                        </div>
                        <div class="MediaTypeLogo">
                            <img src="@objSubMediaType.MediaIconPath" title="@objSubMediaType.DisplayName" />
                        </div>
                        <div class="MediaRoomContent">
                            <div class="media-heading float-left" title="@Html.Raw(fTitle)">
                                <a href="@(PMBasePath + PMModel.FileLocation.Replace(@"\", @"/"))" target="_blank">
                                    @Html.Raw(sTitle)
                                </a>
                            </div>
                            <div class="subheading float-left margintop1">
                                @item.timeDifference
                            </div>
                            <div class="clear float-left media-body">
                                @Html.Raw(displayText)
                            </div>
                        </div>
                        <div class="clear post-divider"></div>
                        <div class="clear margintop2 marginbottom2">
                            <div class="MediaRoomActionBar">
                                <div class="viewmore" style="min-height:1px">
                                </div>
                                <div class="viewlocation">
                                    @if (!string.IsNullOrWhiteSpace(fPub))
                                    {
                                        <div class="location-tag" title="@fPub">
                                            @sPub
                                        </div>
                                    }
                                    else
                                    { 
                                        <div class="margintop2"></div>
                                    }
                                </div>
                                <div class="viewcontentdetail">
                    <div class="circulation pull-left" title="Circulation @fCirculation">
                        <span>@sCirculation</span>
                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
     
                         break;
                                                case CommonFunctions.CategoryType.MS:
                         IQArchive_ArchiveMiscModel miscModel = item.MediaData as IQArchive_ArchiveMiscModel;
                         Month = miscModel.CreateDT.ToString("MMM", System.Globalization.CultureInfo.InvariantCulture);
                         Day = miscModel.CreateDT.Day.ToString();
                         Time = miscModel.CreateDT.ToString("hh:mm tt");
                         string catimg = string.Empty;
                         string tooltip = string.Empty;

                         switch (miscModel.FileType)
                         {
                             case CommonFunctions.IQUGCMediaTypes.Doc:
                                 catimg = "word.png";
                                 tooltip = "Document";
                                 break;
                             case CommonFunctions.IQUGCMediaTypes.Excel:
                                 catimg = "excel.png";
                                 tooltip = "Spreadsheet";
                                 break;
                             case CommonFunctions.IQUGCMediaTypes.Pdf:
                                 catimg = "pdf.png";
                                 tooltip = "PDF";
                                 break;
                             case CommonFunctions.IQUGCMediaTypes.Image:
                                 catimg = "image.png";
                                 tooltip = "Image";
                                 break;
                             default:
                                 catimg = string.Empty;
                                 break;
                         }
                                                    
                    <div id="divMedia_@item.ID" class="media">
                        <div class="MediaDate">
                            <div class="post-date">
                                <span class="month">@Month</span>
                                <div>
                                    <span class="today">@Day</span>
                                </div>
                                <span class="timeWithTimeZone">@Time @miscModel.TimeZone</span>
                            </div>
                        </div>
                        <div class="MediaTypeLogo">
                            <img src="/images/MediaIcon/@catimg" title="@tooltip" />
                        </div>
                        <div class="MediaRoomContent">
                            <div class="media-heading float-left" title="@Html.Raw(fTitle)">
                                <a href="@miscModel.MediaUrl" target="_blank">@Html.Raw(sTitle)</a>
                            </div>
                            <div class="subheading float-left margintop1">
                                @item.timeDifference
                            </div>
                            <div class="clear float-left media-body">
                                @Html.Raw(displayText)
                            </div>
                        </div>
                        <div class="clear post-divider"></div>
                        <div class="clear margintop2 marginbottom2">
                            <div class="MediaRoomActionBar">
                                <div class="viewmore">
                                    <div class="margintop2"></div>
                                </div>
                            </div>
                        </div>
                    </div>
     
                           break;
                                                case CommonFunctions.CategoryType.PQ:
                           IQArchive_ArchivePQModel pqModel = item.MediaData as IQArchive_ArchivePQModel;
                           string authors = String.Empty;

                           if (pqModel.Authors != null && pqModel.Authors.Count > 0)
                           {
                               if (pqModel.Authors.Count > 2)
                               {
                                   authors = "(" + String.Join(", ", pqModel.Authors.Take(2)) + ", ...) ";
                               }
                               else
                               {
                                   authors = "(" + String.Join(", ", pqModel.Authors) + ") ";
                               }
                           }

                           if (!string.IsNullOrWhiteSpace(pqModel.Publication))
                           {
                               fPub = pqModel.Publication.Trim() + " " + authors;

                               if (fPub.Length > 23)
                               {
                                   sPub = fPub.Substring(0, 21) + "...";
                               }
                               else
                               {
                                   sPub = fPub;
                               }
                           }
                                                   
                    <div id="divMedia_@item.ID" class="media">
                        <div class="MediaDate">
                            <div class="post-date">
                                <span class="month">@Month</span>
                                <div>
                                    <span class="today">@Day</span>
                                </div>
                                <span class="timeWithTimeZone">&nbsp;</span>
                            </div>
                        </div>
                        <div class="MediaTypeLogo">
                            <img src="@objSubMediaType.MediaIconPath" title="@objSubMediaType.DisplayName" />
                        </div>
                        <div class="MediaRoomContent">
                            <div class="media-heading float-left" title="@Html.Raw(fTitle)">
                                <a href="../ProQuest/Index?source=library&id=@item.ID" target="_blank">
                                    @Html.Raw(sTitle)
                                </a>
                            </div>
                            <div class="subheading float-left margintop1">
                                @item.timeDifference
                            </div>
                            <div class="clear float-left media-body">
                                @Html.Raw(displayText)
                            </div>
                        </div>
                        <div class="clear post-divider"></div>
                        <div class="clear margintop2 marginbottom2">
                            <div class="MediaRoomActionBar">
                                <div class="viewmore" style="min-height:1px">
                                </div>
                                <div class="viewlocation">
                                    @if (!string.IsNullOrWhiteSpace(fPub))
                                    {
                                        <div class="location-tag" title="@fPub">
                                            @sPub
                                        </div>
                                    }
                                    else
                                    { 
                                        <div class="margintop2"></div>
                                    }
                                </div>
                                <div id="divSentimentTV_@item.ID" class="viewsentiment" title="Sentiment">
                                    <div class="sentimentLeftFloat sentiment-tag">
                                        <div class="divSentimentMain sentimentFont">
                                            <div class="divSentimentMain">
                                                <div class="divSentimentNeg">
                                                    <div style='width:@((pqModel.NegativeSentiment * 6) > 25 ? 25 : (pqModel.NegativeSentiment * 6))px;'>
                                                        @pqModel.NegativeSentiment
                                                    </div>
                                                </div>
                                                <div class="divSentimentPos">
                                                    <div style='width:@((pqModel.PositiveSentiment * 6) > 25 ? 25 : (pqModel.PositiveSentiment * 6))px;'>
                                                        @pqModel.PositiveSentiment
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
     
                                                   break;
                                                   
                                                case CommonFunctions.CategoryType.IQRadio:
                                                    IQArchive_ArchiveRadioModel RadioModel = item.MediaData as IQArchive_ArchiveRadioModel;
                                                    Month = RadioModel.LocalDateTime != null ? RadioModel.LocalDateTime.ToString("MMM", System.Globalization.CultureInfo.InvariantCulture) : string.Empty;
                                                    Day = RadioModel.LocalDateTime != null ? RadioModel.LocalDateTime.Day.ToString() : string.Empty;
                                                    Time = RadioModel.LocalDateTime != null ? RadioModel.LocalDateTime.ToString("hh:mm tt") : string.Empty;

                                                   if (!string.IsNullOrWhiteSpace(RadioModel.Market))
                                                   {
                                                       fPub = RadioModel.Market.Trim();

                                                       if (fPub.Length > 23)
                                                       {
                                                           sPub = fPub.Substring(0, 21) + "...";
                                                       }
                                                       else
                                                       {
                                                           sPub = fPub;
                                                       }
                                                   }
                                                    
                    <div id="divMedia_@item.ID" class="media">
                        <div class="MediaDate">
                            <div class="post-date">
                                <span class="month">@Month</span>
                                <div>
                                    <span class="today">@Day</span>
                                </div>
                                <span class="timeWithTimeZone">@Time @RadioModel.TimeZone</span>
                            </div>
                        </div>
                        <div class="MediaTypeLogo">
                            <img src="@RadioModel.StationLogo" title="@objSubMediaType.DisplayName" />
                        </div>
                        <div class="float-right FeedsVideoSpacer">
                            <div class="FeedsVideo positionRelative float-left">
                                <a class="cursorPointer" href="../ClipPlayer/?ClipID=@RadioModel.ClipGuid" target="_blank">
                                    <img src="~/images/video.png" class="maxwidth130" alt="play video" />
                                </a>
                            </div>
                        </div>
                        <div class="MediaRoomContent">
                            <div class="media-heading float-left" title="@Html.Raw(fTitle)">
                                @Html.Raw(sTitle)
                            </div>
                            <div class="subheading float-left margintop1">
                                @item.timeDifference
                            </div>
                            <div class="clear float-left media-body">
                                <span style="color:#73897F">@RadioModel.StationID</span>
                                @if (!string.IsNullOrWhiteSpace(displayText))
                                {
                                    <span> - @Html.Raw(displayText)</span>
                                }
                            </div>
                        </div>
                        <div class="clear post-divider"></div>
                        <div class="clear margintop2 marginbottom2">
                            <div class="MediaRoomActionBar">
                                <div class="viewmore" style="min-height:1px">
                                </div>
                                <div class="viewlocation">
                                    @if (!string.IsNullOrWhiteSpace(fPub))
                                    {
                                        <div class="location-tag" title="@fPub">
                                            @sPub
                                        </div>
                                    }
                                    else
                                    { 
                                        <div class="margintop2"></div>
                                    }
                                </div>
                                <div id="divSentimentTV_@item.ID" class="viewsentiment" title="Sentiment">
                                    <div class="sentimentLeftFloat sentiment-tag">
                                        <div class="divSentimentMain sentimentFont">
                                            <div class="divSentimentMain">
                                                <div class="divSentimentNeg">
                                                    <div style='width:@((RadioModel.NegativeSentiment * 6) > 25 ? 25 : (RadioModel.NegativeSentiment * 6))px;'>
                                                        @RadioModel.NegativeSentiment
                                                    </div>
                                                </div>
                                                <div class="divSentimentPos">
                                                    <div style='width:@((RadioModel.PositiveSentiment * 6) > 25 ? 25 : (RadioModel.PositiveSentiment * 6))px;'>
                                                        @RadioModel.PositiveSentiment
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="viewcontentdetail">
                                    <div class="marketrank pull-left" title="Market Rank @RadioModel.DMARank">
                                        <span>@RadioModel.DMARank</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>     
                                break;
                                            }
                                            <br />
                                        }
                                    }
                                }
                            }
                        }
                        else
                        {
                            <text>No items have been published</text>
                        }
                    }
                        </div>
                    </div>
                    }
                    catch (Exception exception)
                    {
                        IQMedia.WebApplication.Utility.CommonFunctions.WriteException(exception);
                        <div style="color: #ff0000; padding: 25px;">
                            An error occurred, please try again
                        </div>
                    }
                }
                else
                {
                    <div style="color: #ff0000; padding: 25px;">
                        @if (ViewBag.IsInvalidID)
                        {
                            <text> Invalid/Missing ID </text>
                        }
                        @if (ViewBag.IsError)
                        {
                            <text> An error occurred, please try again </text>
                        }
                    </div>
                }
            </div>
        </div>
    </div>
    @Html.Partial("~/Views/Shared/_Footer.cshtml")
</body>
<!-- Le javascript
    ================================================== -->
<!-- Placed at the end of the document so the pages load faster -->
<script src="~/Scripts/Bootstrap/bootstrap-modal.js?v=1.0" type="text/javascript"></script>
<script language="javascript" type="text/javascript">

    function ShowLoading() {
        var loadingHTML = '<div id="divLoading" class="loadingdiv"><span>Loading<img src=\'../images/1.gif\' /></span></div>';
        $(document.body).append(loadingHTML);
        $("#divLoading").fadeIn(500);
    }
    function HideLoading() {
        $("#divLoading").remove();
    }
</script>

 <script type="text/javascript">
     $(document).ready(function () {
         if (screen.height >= 768) {
             $('#divResultScrollContent').css({ 'height': documentHeight - 250 });
             $('#divResultScrollContent').mCustomScrollbar({
                 advanced: {
                     updateOnContentResize: true,
                     autoScrollOnFocus: false
                 },
                 scrollInertia: 60
             });
         }
     });


     $(window).resize(function () {
         if (screen.height >= 768) {
             $('#divResultScrollContent').css({ 'height': documentHeight - 250 });
         }
     });        
    </script>
</html>
