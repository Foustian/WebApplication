@using IQMedia.Model;
@using IQMedia.Shared.Utility;
@using IQCommon.Model;
@model Dictionary<string, object>
@if (Model != null && Model.ContainsKey("Medium") && Model.ContainsKey("Results"))
{
    IQ_MediaTypeModel _Medium = (IQ_MediaTypeModel)(Model["Medium"]);
    bool _CompeteAccess = (bool)(Model["CompeteAccess"]);
    bool _NielsenAccess = (bool)(Model["NielsenAccess"]);
    bool _AudienceCheck = CommonFunctions.CheckNielsenCompeteAccess(_Medium.UseAudience, _Medium.RequireNielsenAccess, _NielsenAccess, _Medium.RequireCompeteAccess, _CompeteAccess);
    bool _MediaValueCheck = CommonFunctions.CheckNielsenCompeteAccess(_Medium.UseMediaValue, _Medium.RequireNielsenAccess, _NielsenAccess, _Medium.RequireCompeteAccess, _CompeteAccess);
    bool _AMFCheck = (_AudienceCheck || _MediaValueCheck);
    List<DashboardTopResultsModel> _TopResults = (List<DashboardTopResultsModel>)Model["Results"];
    string titleGrid = Model["TitleGrid"].ToString();

    var _OnClickEnable = true;

    if (Model.ContainsKey("OnClickEnable"))
    {
        _OnClickEnable = Convert.ToBoolean(Model["OnClickEnable"]);
    }
    
    <div>
        <br />
        <br />
        <b>@titleGrid </b>
    </div>
    
    if (_TopResults.Count > 0)
    {       
    <table class="topResult" width="100%">
        <tr>
            <th style="text-align: left; width: 21%;">
                Market (Rank)
            </th>
            <th style="text-align: right; width: 15%;">
                # of Mentions
            </th>
            @if (_AudienceCheck)
            {
                <th style="text-align: right; width: 15%;">
                    Total Audience
                </th>
            }
            <th style="text-align: right; width: 15%;">
                Total Airtime
            </th>
            @if (_MediaValueCheck)
            {
                <th style="text-align: right; width: 15%;">
                    Media Value
                </th>
            }
            <th style="text-align: right; width: 19%;">
                Sentiment
            </th>
        </tr>
        @foreach (DashboardTopResultsModel item in _TopResults)
        {
            <tr>
                <td style="text-align: left;">
                    @{IQMedia.WebApplication.Utility.CommonFunctions.DMAWithOutRank dmaName;}
                    @if (_OnClickEnable)
                    {
                        <a href="javascript:void(0)" onclick="OpenFeedOutletDma('@Model["DataType"].ToString()','@item.DMA_Name','@item.SubMediaType')">@item.DMA_Name
                            @(Enum.TryParse<IQMedia.WebApplication.Utility.CommonFunctions.DMAWithOutRank>(item.DMA_Name, true, out dmaName) ? string.Empty : "(" + item.DMA_Num + ")")</a>
                    }
                    else
                    {
                        @item.DMA_Name
                        @(Enum.TryParse<IQMedia.WebApplication.Utility.CommonFunctions.DMAWithOutRank>(item.DMA_Name, true, out dmaName) ? string.Empty : "(" + item.DMA_Num + ")")
                    }
                </td>
                <td style="text-align: right;">
                    @(string.Format("{0:N0}", item.Mentions))
                </td>
                @if (_AudienceCheck)
                {
                    <td style="text-align: right;">
                        @(string.Format("{0:N0}", item.Audience))
                    </td>
                }
                <td style="text-align: right;">
                    @{TimeSpan tp = TimeSpan.FromMinutes((Convert.ToDouble(item.NoOfDocs) * 8) / 60);}
                    @tp.Hours.ToString().PadLeft(2, '0') : @tp.Minutes.ToString().PadLeft(2, '0') :
                    @tp.Seconds.ToString().PadLeft(2, '0')
                </td>
                @if (_MediaValueCheck)
                {
                    <td style="text-align: right;">
                        $@(string.Format("{0:N0}", item.MediaValue))
                    </td>
                }
                <td style="text-align: right;">
                    @{
                int posSentiWidth = ((item.PositiveSentiment * 6) > 25 ? ((item.PositiveSentiment.ToString().Length > 3) ? (item.PositiveSentiment.ToString().Length * 7) : 25) : (item.PositiveSentiment * 6));
                int negSentiWidth = ((item.NegativeSentiment * 6) > 25 ? ((item.NegativeSentiment.ToString().Length > 3) ? (item.NegativeSentiment.ToString().Length * 7) : 25) : (item.NegativeSentiment * 6));
                    }
                    <div class="divSentimentMain sentimentFont"  style="width:@((negSentiWidth > 25 ? negSentiWidth : 25) + (posSentiWidth > 25 ? posSentiWidth : 25) + 1)px;">
                        <div class="divSentimentNeg" @(negSentiWidth > 25 ? "style=width:" + negSentiWidth + "px" : string.Empty)>
                            <div style="width: @(negSentiWidth)px;">
                                @if (item.NegativeSentiment > 0)
                                {
                                    <text>@string.Format("{0:N0}", item.NegativeSentiment)</text>
                                }
                                else
                                {
                                    <text>&nbsp;</text>
                                }
                            </div>
                        </div>
                        <div class="divSentimentPos" @(posSentiWidth > 25 ? "style=width:" + posSentiWidth + "px" : string.Empty)>
                            <div style="width: @(posSentiWidth)px;" >
                                @if (item.PositiveSentiment > 0)
                                {
                                    <text>@string.Format("{0:N0}", item.PositiveSentiment)</text>
                                }
                                else
                                {
                                    <text>&nbsp;</text>
                                }
                            </div>
                        </div>
                    </div>
                </td>
            </tr>
        }
    </table>
    }
    else
    {
    <table width="100%" style="text-align: center;">
        <tr>
            <td>
                <span style="background: none repeat scroll 0 0 #F2F2F2; border: 1px solid #DCDCDC;
                    margin-bottom: 10px; margin-right: 10px; padding: 3px 10px 3px 6px; position: relative;
                    width: 300px !important;">No Results found</span>
            </td>
        </tr>
    </table>
    }
}